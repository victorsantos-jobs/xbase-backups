#!/usr/bin/env python3
"""
Exemplo de Uso do Agente Minerador
Demonstra como usar o sistema programaticamente
"""

import sys
import os
from datetime import datetime

# Adiciona o diret√≥rio atual ao path para imports
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from minerador import Minerador
from scheduler import AgendadorMinerador
from utils.logger import logger

def exemplo_mineracao_manual():
    """Exemplo de minera√ß√£o manual"""
    print("=== EXEMPLO: MINERA√á√ÉO MANUAL ===")
    
    minerador = Minerador()
    
    try:
        # Executa minera√ß√£o com par√¢metros espec√≠ficos
        resultado = minerador.executar_mineracao(
            porte="Pequena",
            estado="SP",
            nicho="Tecnologia"
        )
        
        if resultado and resultado.get('status') == 'sucesso':
            print(f"‚úÖ Minera√ß√£o conclu√≠da: {resultado.get('resumo')}")
            print(f"üìä Empresas encontradas: {resultado.get('resultados', {}).get('total_empresas', 0)}")
            print(f"üìÅ Arquivos gerados: {len(resultado.get('arquivos_gerados', []))}")
        else:
            print(f"‚ùå Minera√ß√£o falhou: {resultado.get('mensagem', 'Erro desconhecido')}")
            
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")
    finally:
        minerador.agente.cleanup()

def exemplo_mineracao_automatica():
    """Exemplo de minera√ß√£o autom√°tica"""
    print("\n=== EXEMPLO: MINERA√á√ÉO AUTOM√ÅTICA ===")
    
    minerador = Minerador()
    
    try:
        # Executa minera√ß√£o autom√°tica com par√¢metros padr√£o
        resultados = minerador.executar_mineracao_automatica()
        
        print(f"‚úÖ Minera√ß√£o autom√°tica conclu√≠da: {len(resultados)} execu√ß√µes")
        
        for i, resultado in enumerate(resultados, 1):
            if resultado and resultado.get('status') == 'sucesso':
                print(f"  Execu√ß√£o {i}: {resultado.get('resumo')}")
            else:
                print(f"  Execu√ß√£o {i}: Falhou - {resultado.get('mensagem', 'Erro desconhecido')}")
                
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")
    finally:
        minerador.agente.cleanup()

def exemplo_agendador():
    """Exemplo de uso do agendador"""
    print("\n=== EXEMPLO: AGENDADOR ===")
    
    agendador = AgendadorMinerador()
    
    try:
        # Inicia agendador
        agendador.iniciar()
        
        # Mostra status
        status = agendador.obter_status()
        print("Status do Agendador:")
        for key, value in status.items():
            print(f"  {key}: {value}")
        
        # Executa minera√ß√£o manual atrav√©s do agendador
        resultado = agendador.executar_mineracao_manual(
            porte="M√©dia",
            estado="RJ",
            nicho="Sa√∫de"
        )
        
        if resultado:
            print(f"‚úÖ Minera√ß√£o manual executada: {resultado.get('resumo', 'N/A')}")
        
        # Para agendador
        agendador.parar()
        
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")
        agendador.parar()

def exemplo_estatisticas():
    """Exemplo de obten√ß√£o de estat√≠sticas"""
    print("\n=== EXEMPLO: ESTAT√çSTICAS ===")
    
    minerador = Minerador()
    
    try:
        # Obt√©m estat√≠sticas do sistema
        stats = minerador.obter_estatisticas()
        
        print("Estat√≠sticas do Sistema:")
        for key, value in stats.items():
            if isinstance(value, dict):
                print(f"  {key}:")
                for sub_key, sub_value in value.items():
                    print(f"    {sub_key}: {sub_value}")
            else:
                print(f"  {key}: {value}")
                
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")
    finally:
        minerador.agente.cleanup()

def exemplo_limpeza():
    """Exemplo de limpeza de arquivos"""
    print("\n=== EXEMPLO: LIMPEZA DE ARQUIVOS ===")
    
    minerador = Minerador()
    
    try:
        # Limpa arquivos antigos (mais de 30 dias)
        arquivos_removidos = minerador.limpar_arquivos_antigos(dias=30)
        
        print(f"‚úÖ Limpeza conclu√≠da: {arquivos_removidos} arquivos removidos")
        
    except Exception as e:
        print(f"‚ùå Erro: {str(e)}")
    finally:
        minerador.agente.cleanup()

def main():
    """Fun√ß√£o principal dos exemplos"""
    print("üöÄ EXEMPLOS DE USO DO AGENTE MINERADOR")
    print("=" * 50)
    
    try:
        # Executa exemplos
        exemplo_mineracao_manual()
        exemplo_mineracao_automatica()
        exemplo_agendador()
        exemplo_estatisticas()
        exemplo_limpeza()
        
        print("\n‚úÖ Todos os exemplos executados com sucesso!")
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Execu√ß√£o interrompida pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro na execu√ß√£o dos exemplos: {str(e)}")

if __name__ == "__main__":
    main()
